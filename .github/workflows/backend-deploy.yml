name: Deploy Backend to Docker

on:
  push:
    paths:
      - 'graduationProject/**'
      - '.github/workflows/backend-deploy.yml'
    branches:
      - main

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      # 1. Клонируем репозиторий
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Настроим Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # 3. Кешируем Docker слои
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # 4. SSH на сервер и выполняем действия для бэкенда
      - name: SSH into Server and Deploy Backend
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # 4.1 Переходим в папку с бэкендом
            cd ~/vintageBot/graduationProject

            # 4.2 Обновляем код с репозитория
            git pull origin main

            # 4.3 Даем права на выполнение для mvnw
            chmod +x ./mvnw

            # 4.4 Собираем JAR-файл
            ./mvnw clean package -DskipTests

            # 4.5 Собираем новый Docker-образ
            docker build -t stassrc/diploma_backend:latest .

            # 4.6 Логинимся в Docker Hub
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # 4.7 Пушим образ на Docker Hub
            docker push stassrc/diploma_backend:latest

            # 4.8 Переходим в каталог с Docker Compose
            cd ~/vintageBot/compuseDiplom

            # 4.9 Подтягиваем новый образ и перезапускаем контейнер
            docker compose pull backend
            docker compose up -d backend
